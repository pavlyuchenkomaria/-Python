if __name__ == '__main__':
    # существует абстрактная структура данных - это описание коробочки с данными,
    # описание ее общих функций, свойств и сфер применения (когда нужно использовать)
    # а есть просто структрура данных - это конкретная реализация абстрактной стр-ры данных,
    # с помощью какого-то алгоритма (ех. абстрактная стр-ра map,
    #  реализуемая с помощью алгоритмов красно-черное дерево и алгоритма хэширования,
    # причем в зависимости от выбора алгоритма некоторые  свойства могут меняться)

    # 1. динамический массив (абстр.)
    array_ex = [4, 8, 1]
    # операции и их стоимость (от О())
    # а. добавление элемента в конец массива - О(1)
    array_ex.append(7)  # array_ex = [4, 8, 1, 7]
    # б. добавление элемента в середину массива (произвольный индекс) - О(n)
    array_ex.insert(0, 6)  # array_ex = [6, 4, 8, 1, 7]
    # в. получение элемента по произвольному индексу - О(1) (т.к. мы имеем адрес
    # нулевого элемента и просто к нему прибавляем какое-то число)
    print(array_ex[4])  # 7
    # г. удаление элемента по произвольному индексу - О(n)
    array_ex.pop(3)  # array_ex = [6, 4, 8, 7]
    # д. удаление элемента с конца массива - О(1)
    array_ex.pop(len(array_ex) - 1)   # array_ex = [6, 4, 8]
    # е. поиск элемента с данным значением в массиве - О(n)
    print(array_ex.index(4))   # 1
    # ж. цикл по всем элементам массива - О(n)
    s = 0
    for element in array_ex:
        s += element
    # 18

    # dictionary / map / карта (реализация с помощью red-black tree)
    map_ex = {"Denis": 150, "Masha": 40}
    # а. добавление элемента - O(log N)
    map_ex["Pasha"] = 60  # Denis - 150, Masha - 40, Pasha - 60
    # нет гарантии на порядок в общем случае, в красно-черном дереве
    # элементы будут отсортированы по ключу
    # б. удаление элемента - O(log N)
    map_ex.pop("Masha")  # Denis - 150, Pasha - 60
    # в. поиск по значению - O(log N)
    map_ex.get("Denis") # 150
    # г. цикл по всем элементам - O(n) - #не типичное для map дейсвтие
    for (key, value) in map_ex.items():
        print(key, value)
